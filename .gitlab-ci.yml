---
stages:
  - test
  - check
  - build
  - publish
  - clean

check code smells:
  script: merchise_lint
  stage: test
  tags:
    - merchise-lint
  only:
    - branches

.run_tests: &run_tests
  stage: test
  script:
    - export CWD=`pwd`
    - cd ~/src/$ODOO_WORKTREE
    - git pull
    - mkdir -p ~/virtualenvs
    - test -d ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE || virtualenv -p `which $PYTHON` ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE
    - source ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE/bin/activate
    - pip install -r requirements.txt
    - pip install -U "six>=1.9.0" "decorator>=4.0,<4.2"
    - pip install -e .
    - cd $CWD
    - pip install -e .
    - createdb $CI_PROJECT_NAME_$CI_COMMIT_SHA
    - xoeuf -d $CI_PROJECT_NAME_$CI_COMMIT_SHA --stop-after-init --test-enable --log-level=test --workers=0 --max-cron-threads=0 -i `ls xoeuf/tests/ | grep ^test_ | xargs | tr " " ","`
    - dropdb $CI_PROJECT_NAME_$CI_COMMIT_SHA
    - deactivate
  tags:
    - virtualenv
    - xoeuf-tester
  only:
    - branches

run all Odoo 8 tests:
  <<: *run_tests
  variables:
    PYTHON: python
    ODOO_WORKTREE: odoo8

run all Odoo 10 tests:
  <<: *run_tests
  variables:
    PYTHON: python
    ODOO_WORKTREE: odoo10

run all Odoo 11 tests:
  <<: *run_tests
  variables:
    PYTHON: python3
    ODOO_WORKTREE: odoo11

check signature of tag:
  stage: check
  script:
    - git verify-tag $CI_COMMIT_REF_NAME
  tags:
    - git
    - gpg
  only:
    - tags

build source distribution:
  stage: build
  script:
    - rm -f dist/*
    - python setup.py sdist
  tags:
    - python
  artifacts:
    paths:
      - dist/
  only:
    - tags

build binary distribution:
  stage: build
  script:
    - rm -f dist/*
    - python setup.py bdist_wheel
  tags:
    - wheel
  artifacts:
    paths:
      - dist/
  only:
    - tags

publish_locally:
  stage: publish
  script:
    - ssh manu@gestion.lahavane.com "mkdir -p Repos/$CI_PROJECT_NAME"
    - scp dist/* manu@gestion.lahavane.com:Repos/$CI_PROJECT_NAME/
  tags:
    - repo.lahavane.com
  only:
    - tags
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution


publish_pypi:
  stage: publish
  script:
    - twine upload dist/*
  tags:
    - twine
  only:
    - tags
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution
  environment:
    name: pypi
    url: https://pypi.python.org/pypi/$CI_PROJECT_NAME


clean_build:
  stage: clean
  script:
    - rm -f dist/*
  tags:
    - python
  when: always
  allow_failure: true
  dependencies:
    - build source distribution
    - build binary distribution
