---
stages:
  - pre-check
  - check
  - test
  - build
  - publish

check code smells (with Bugbear and Python 3.6):
  image: registry.merchise.org/merchise/python-dev:3.6-alpine
  stage: check
  script:
    - merchise_lint
  only:
    refs:
      - master
      - merge_requests
    changes:
      - xoeuf/**/*.py

check formatting with black:
  image: registry.merchise.org/merchise/python-dev:3.6-alpine
  stage: check
  script:
    - /usr/local/bin/black --check xoeuf/
  only:
    refs:
      - master
      - merge_requests
    changes:
      - xoeuf/**/*.py


.run_tests: &run_tests
  needs:
    - check code smells (with Bugbear and Python 3.6)
    - check formatting with black
  image: registry.merchise.org/mercurio/odoo-docker:o${ODOO_VERSION}-${PYTHON_VERSION}
  services:
    - name: "mdillon/postgis:10-alpine"
      alias: "postgres"
  stage: test
  script:
    - |
      mkdir -p vendor
      cd vendor
      git clone -b merchise-develop-${ODOO_VERSION}.0 --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.merchise.org/merchise/odoo.git
      cd odoo
      pip install -U wheel setuptools
      pip install "futures<3"
      pip install -r requirements.txt
      pip install -U "six>=1.9.0" "decorator>=4.0,<4.2" "hypothesis>=3.24"
      pip install -e .
      cd ../../
      pip install -e .
      export ADDONS=`ls xoeuf/tests/ | grep ^test_ | xargs | tr " " ","`
      cd vendor/odoo
      ../../runtests-odoo.sh -i $ADDONS --db_host=$POSTGRES_HOST --db_password=$POSTGRES_PASSWORD --db_user=$POSTGRES_USER
  only:
    refs:
      - master
      - merge_request
    changes:
      - xoeuf/**/*.py

run all Odoo 12 tests in Python 3.6:
  <<: *run_tests
  variables:
    PYTHON_VERSION: "3.6"
    ODOO_VERSION: "12"
    POSTGRES_USER: xoeuf
    POSTGRES_PASSWORD: xoeuf
    POSTGRES_HOST: postgres


run all Odoo 12 tests in Python 3.8:
  <<: *run_tests
  variables:
    POSTGRES_USER: xoeuf
    POSTGRES_PASSWORD: xoeuf
    POSTGRES_HOST: postgres
    PYTHON_VERSION: "3.8"
    ODOO_VERSION: "12"


build source distribution:
  image: python:3.8-alpine
  stage: build
  script:
    - apk add git
    - rm -f dist/*
    - python setup.py sdist
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(a\d+|b\d+|rc\d+)?(\.post\d+)?$/

build binary distribution:
  image: python:3.8-alpine
  stage: build
  script:
    - apk add git
    - rm -f dist/*
    - python setup.py bdist_wheel
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(a\d+|b\d+|rc\d+)?(\.post\d+)?$/

publish locally:
  stage: publish
  script:
    - ssh manu@gestion.lahavane.com "mkdir -p Repos/$CI_PROJECT_NAME"
    - scp dist/* manu@gestion.lahavane.com:Repos/$CI_PROJECT_NAME/
  tags:
    - repo.lahavane.com
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(a\d+|b\d+|rc\d+)?(\.post\d+)?$/
  environment:
    name: repo.lahavane.com
    url: http://repo.lahavane.com/pypi/$CI_PROJECT_NAME
  needs:
    - build source distribution
    - build binary distribution


publish pypi:
  image: python:3.8
  stage: publish
  script:
    - pip install twine
    - twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^\d+(\.\d+)*(a\d+|b\d+|rc\d+)?(\.post\d+)?$/
  needs:
    - build source distribution
    - build binary distribution
  environment:
    name: pypi
    url: https://pypi.org/project/$CI_PROJECT_NAME


build documentation:
  image: registry.merchise.org/mercurio/odoo-docker:o12-3.8
  variables:
    PYTHON_VERSION: "3.8"
    ODOO_VERSION: "12"
  stage: build
  script:
    - |
      set -x
      mkdir -p vendor
      cd vendor
      git clone -b merchise-develop-${ODOO_VERSION}.0 --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.merchise.org/merchise/odoo.git
      cd odoo
      pip install -U wheel setuptools
      pip install "futures<3"
      pip install -r requirements.txt
      pip install -U "six>=1.9.0" "decorator>=4.0,<4.2" "hypothesis>=3.24"
      pip install -e .
      cd ../../
      pip install -e .
      pip install sphinx sphinx-rtd-theme
      make -C docs/ html
      cd docs/build/html
      tar -cjf ../../../$CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2 ./
  artifacts:
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2
    expire_in: 4 days
  only:
    refs:
      - master
      - tags
      - merge_request
    changes:
      - xoeuf/**/*.py
      - docs/**/*.rst


publish in our rtd:
  variables:
    GIT_STRATEGY: none
  stage: publish
  script:
    - scp $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2 rtd@docs.lahavane.com:.
    - ssh rtd@docs.lahavane.com mkdir -p $CI_PROJECT_NAME/.$CI_COMMIT_SHA
    - ssh rtd@docs.lahavane.com tar -xf $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2 -C $CI_PROJECT_NAME/.$CI_COMMIT_SHA
    - ssh rtd@docs.lahavane.com "rm -r /var/www/html/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME; ln -sr /var/www/html/$CI_PROJECT_NAME/.$CI_COMMIT_SHA /var/www/html/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME"
    - ssh rtd@docs.lahavane.com rm $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2
    - ssh rtd@docs.lahavane.com "cd /var/www/html/$CI_PROJECT_NAME; ls -al | grep -oE '\.([0-9]|[a-z])*$' | sort | uniq -c | grep '1 ' | grep -oE '\.([0-9]|[a-z])*$' | xargs rm -rf"
  tags:
    - rtd@docs.lahavane.com
  needs:
    - build documentation
  environment:
    name: docs.lahavane.com
    url: http://docs.lahavane.com/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME
  only:
    refs:
      - master
      - tags
      - merge_request
    changes:
      - xoeuf/**/*.py
      - docs/**/*.rst
