---
stages:
  - pre-check
  - check
  - build doc
  - publish doc
  - test
  - build
  - publish

check code smells (with Bugbear and Python 3.6):
  image: python:3.6-alpine
  stage: check
  script:
    - pip install merchise.lint==0.11 flake8-bugbear
    - merchise_lint
  only:
    - master
    - merge_requests


check code smells (without Bugbear and Python 2.7):
  image: python:2.7-alpine
  stage: check
  script:
    - pip install merchise.lint==0.11
    - merchise_lint
  only:
    - master
    - merge_requests


check formatting with black:
  image: python:3.6-alpine
  stage: check
  script:
    - apk add git g++
    - python -m pip install -U --pre git+https://github.com/python/black.git@f3bb22a828495c66d8d2dae1edf45e15fc2daddb
    - black --check xoeuf/
  only:
    - master
    - merge_requests


.run_tests: &run_tests
  stage: test
  script:
    - export CWD=`pwd`
    - cd ~/src/$ODOO_WORKTREE
    - git pull
    - mkdir -p ~/virtualenvs
    - rm -rf ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE || true
    - virtualenv -p `which $PYTHON` ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE
    - source ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE/bin/activate
    - pip install "futures<3"
    - pip install -r requirements.txt
    - pip install -U "six>=1.9.0" "decorator>=4.0,<4.2" "hypothesis>=3.24"
    - pip install -e .
    - cd $CWD
    - pip install -e .
    - export ADDONS=`ls xoeuf/tests/ | grep ^test_ | xargs | tr " " ","`
    - cd ~/src/$ODOO_WORKTREE
    - runtests-odoo.sh -exec xoeuf -p $PYTHON -i $ADDONS
  tags:
    - virtualenv
    - xoeuf-tester
  only:
    - master
    - merge_requests

run all Odoo 12 tests:
  <<: *run_tests
  variables:
    PYTHON: python3
    ODOO_WORKTREE: odoo12

run all Odoo 11 tests:
  <<: *run_tests
  variables:
    PYTHON: python3
    ODOO_WORKTREE: odoo11

run all Odoo 10 tests:
  <<: *run_tests
  variables:
    PYTHON: python
    ODOO_WORKTREE: odoo10

check signature of tag:
  stage: pre-check
  script:
    - git verify-tag $CI_COMMIT_REF_NAME
  tags:
    - git
    - gpg
  only:
    - tags

build source distribution:
  stage: build
  script:
    - rm -f dist/*
    - python setup.py sdist
  tags:
    - python
  artifacts:
    paths:
      - dist/
  only:
    - tags

build binary distribution:
  stage: build
  script:
    - rm -f dist/*
    - python setup.py bdist_wheel
  tags:
    - wheel
  artifacts:
    paths:
      - dist/
  only:
    - tags

publish_locally:
  stage: publish
  script:
    - ssh manu@gestion.lahavane.com "mkdir -p Repos/$CI_PROJECT_NAME"
    - scp dist/* manu@gestion.lahavane.com:Repos/$CI_PROJECT_NAME/
  tags:
    - repo.lahavane.com
  only:
    - tags
  environment:
    name: repo.lahavane.com
    url: http://repo.lahavane.com/pypi/$CI_PROJECT_NAME
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution


publish_pypi:
  stage: publish
  script:
    - twine upload dist/*
  tags:
    - twine
  only:
    - tags
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution
  environment:
    name: pypi
    url: https://pypi.python.org/pypi/$CI_PROJECT_NAME


build documentation:
  variables:
    PYTHON: python3
    ODOO_WORKTREE: odoo12
  stage: build doc
  script:
    - export CWD=`pwd`
    - cd ~/src/$ODOO_WORKTREE
    - mkdir -p ~/virtualenvs
    - rm -rf ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE || true
    - virtualenv -p `which $PYTHON` ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE
    - source ~/virtualenvs/$CI_PROJECT_NAME-$ODOO_WORKTREE/bin/activate
    - pip install 'futures<3'
    - pip install -r requirements.txt
    - pip install -U "six>=1.9.0" "decorator>=4.0,<4.2" "hypothesis>=3.24"
    - pip install -e .
    - cd $CWD
    - pip install -e .
    - pip install sphinx sphinx-rtd-theme
    - make -C docs/ html
    - cd docs/build/html
    - tar -cjf ../../../$CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2 ./
  artifacts:
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2
    expire_in: 4 days
  tags:
    - virtualenv
    - xoeuf-tester
  only:
    - master
    - tags
    - /^hotfix-/

publish in our rtd:
  variables:
    GIT_STRATEGY: none
  stage: publish doc
  script:
    - scp $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2 rtd@docs.lahavane.com:.
    - ssh rtd@docs.lahavane.com mkdir -p $CI_PROJECT_NAME/.$CI_COMMIT_SHA
    - ssh rtd@docs.lahavane.com tar -xf $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2 -C $CI_PROJECT_NAME/.$CI_COMMIT_SHA
    - ssh rtd@docs.lahavane.com "rm -r /var/www/html/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME; ln -sr /var/www/html/$CI_PROJECT_NAME/.$CI_COMMIT_SHA /var/www/html/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME"
    - ssh rtd@docs.lahavane.com rm $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar.bz2
    - ssh rtd@docs.lahavane.com "cd /var/www/html/$CI_PROJECT_NAME; ls -al | grep -oE '\.([0-9]|[a-z])*$' | sort | uniq -c | grep '1 ' | grep -oE '\.([0-9]|[a-z])*$' | xargs rm -rf"
  tags:
    - rtd@docs.lahavane.com
  dependencies:
    - build documentation
  environment:
    name: docs.lahavane.com
    url: http://docs.lahavane.com/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME
  only:
    - tags
    - master
    - /^hotfix-/
